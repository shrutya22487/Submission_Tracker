<%- include('partials/header') %>

<div class="container-fluid">
    <div class="row">

    <!-- Nav bar section -->
    <div class="col-md-3 sidebar" style="background-color: #e9ecef; height:100vh; position:fixed; z-index : 2;">
        <div class="jumbotron text-center" style="margin-bottom: 20px;">
            <h1 style="font-size: 5rem; font-weight: bold;">Rema.</h1>
        
        </div>
        <nav class="nav flex-column" style="margin:10px;">
            <a class="btn btn-dark btn-lg" href="/prof_dashboard/students" role="button" 
               style="color: #000; font-weight:bold; margin-bottom:1%; padding:3%; background-color: #fff; border-color: #303030; border-width:2px;" 
               onmouseover="this.style.backgroundColor='#303030'; this.style.borderColor='#303030'; this.style.color='#fff';" 
               onmouseout="this.style.backgroundColor='#fff'; this.style.borderColor='#303030'; this.style.color='#000';">
               Students
            </a>
            
            <a class="btn btn-dark btn-lg" href="/prof_dashboard/research_projects" role="button" 
               style="color:black; margin-top: 0.5%; margin-bottom:1%; padding:3%; background-color: #fff; border-color: #fff;" 
               onmouseover="this.style.backgroundColor='#303030'; this.style.borderColor='#303030'; this.style.color='#fff';" 
               onmouseout="this.style.backgroundColor='#fff'; this.style.borderColor='#fff'; this.style.color='#000';">
               Research Projects
            </a>
            <a class="btn btn-dark btn-lg" href="#" role="button" 
               style="color:black; margin-top: 0.5%; margin-bottom:1%; padding:3%; background-color: #fff; border-color: #fff;" 
               onmouseover="this.style.backgroundColor='#303030'; this.style.borderColor='#303030'; this.style.color='#fff';" 
               onmouseout="this.style.backgroundColor='#fff'; this.style.borderColor='#fff'; this.style.color='#000';">
               Under Review Papers
            </a>
            <a class="btn btn-dark btn-lg" href="#" role="button" 
               style="color:black; margin-top: 0.5%; margin-bottom:1%; padding:3%; background-color: #fff; border-color: #fff;" 
               onmouseover="this.style.backgroundColor='#303030'; this.style.borderColor='#303030'; this.style.color='#fff';" 
               onmouseout="this.style.backgroundColor='#fff'; this.style.borderColor='#fff'; this.style.color='#000';">
               Sponsored Projects
            </a>
            <a class="btn btn-dark btn-lg" href="#" role="button" 
               style="color:black; margin-top: 0.5%; margin-bottom:1%; padding:3%; background-color: #fff; border-color: #ccc;" 
               onmouseover="this.style.backgroundColor='#303030'; this.style.borderColor='#303030'; this.style.color='#fff';" 
               onmouseout="this.style.backgroundColor='#fff'; this.style.borderColor='#ccc'; this.style.color='#000';">
               Reading List
            </a>
            <a class="btn btn-dark btn-lg" href="/conferences" role="button" 
               style="color:black; margin-top: 0.5%; margin-bottom:1%; padding:3%; background-color: #fff; border-color: #fff;" 
               onmouseover="this.style.backgroundColor='#303030'; this.style.borderColor='#303030'; this.style.color='#fff';" 
               onmouseout="this.style.backgroundColor='#fff'; this.style.borderColor='#fff'; this.style.color='#000';">
               Conferences
            </a>
            <a class="btn btn-dark btn-lg" href="/logout" role="button" 
               style="color:black; margin-top: 0.5%; margin-bottom:1%; padding:3%; background-color: #fff; border-color: #fff;" 
               onmouseover="this.style.backgroundColor='#a40000'; this.style.borderColor='#a40000'; this.style.color='#fff';" 
               onmouseout="this.style.backgroundColor='#fff'; this.style.borderColor='#fff'; this.style.color='#000';">
               Logout
            </a>
        </nav>
        

    </div>

   
    <div class="col-md-6" style="background-color: #fff; width: 100%; height: 100vh; margin-left: auto; margin-right: auto;">
<!--  

      <div id="working-console">

        <div class="jumbotron text-center" style="margin-bottom: 20px;">
            <h1 style="font-size: 5rem; font-weight: bold;">Professor Dashboard</h1>
        
        </div>
        
       
        <div class="container" style="position: relative;">
            <h2 style="font-size: 2rem; font-weight: bold; margin-bottom: 20px;margin-top:40px;">Student Search</h2>
            <form id="search-form" style="margin-bottom: 20px; display: flex; justify-content: center; align-items: center;">
                <input type="text" id="search-bar" name="q" placeholder="Search" required 
                       style="width: 100%; max-width: 600px; padding: 12px 20px; border: 1px solid #ccc; border-radius: 50px; font-size: 1rem; outline: none; transition: all 0.3s ease;" 
                       autocomplete="off">
            </form>
            
            <div id="results" style="position: absolute; z-index: 1000; background-color: white; width: 100%; max-width: 600px; left: 50%; transform: translateX(-50%); top: 100%; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); border-radius: 10px; padding: 10px;">
                
            </div>
        </div>
        <br>
        
        <div class="container">
           
            <h2 style="font-size: 2rem; font-weight: bold; margin-bottom: 20px;">Students Under Professor</h2>
            <table style="width: 100%; border-collapse: collapse; margin-bottom: 20px;">
                <thead>
                    <tr>
                        <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Name</th>
                        <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Email</th>
                        <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Archive</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (locals.unarchived_students && Array.isArray(locals.unarchived_students.rows) && locals.unarchived_students.rows.length > 0) { %>
                        <% locals.unarchived_students.rows.forEach(student => { %>
                            <tr>
                                <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 1rem;"><%= student.name %></td>
                                <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 1rem;"><%= student.email_id %></td>
                                <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 1rem;">
                                    <button class="archive_student_button" data-student-id="<%= student.id %>" style="padding: 8px 16px; background-color: #a40000; color: white; border: none; border-radius: 5px; cursor: pointer;">Archive</button>
                                </td>
                                
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="4" style="padding: 12px; text-align: center;">No students found.</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        
            <h2 style="font-size: 2rem; font-weight: bold; margin-top: 40px; margin-bottom: 20px;">Student Jobs Data</h2>
            <table style="width: 100%; border-collapse: collapse; margin-bottom: 20px;">
                <thead>
                    <tr>
                        <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Title</th>
                        <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Professor Name</th>
                        <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Author</th>
                        <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Conference</th>
                        <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Status</th>
                        <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Link</th>
                        <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Date</th>
                        <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Archive</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (locals.unarchived_jobs && Array.isArray(locals.unarchived_jobs.rows) && locals.unarchived_jobs.rows.length > 0) { %>
                        <% locals.unarchived_jobs.rows.forEach(job => { %>
                            <tr>
                                <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 1rem;"><%= job.title %></td>
                                <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 1rem;"><%= job.prof_name %></td>
                                <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 1rem;"><%= job.author %></td>
                                <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 1rem;"><%= job.conference %></td>
                                <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 1rem;"><%= job.status %></td>
                                <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 1rem;">
                                    <a href="<%= job.link %>" style="color: #007bff; text-decoration: none;">Link</a>
                                </td>
                                <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 0.875rem; white-space: nowrap;">
                                    <%= job.date ? job.date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) : '' %>
                                    <br><%= job.date ? job.date.getFullYear() : '' %>
                                </td>
                                <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd;">
                                    <button class="archive_job_button" data-job-id="<%= job.id %>" style="padding: 8px 16px; background-color: #a40000; color: white; border: none; border-radius: 5px; cursor: pointer;">Archive</button>
                                </td>

                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="9" style="text-align: center; padding: 12px; font-size: 1rem;">No jobs found.</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>

            <h2 style="font-size: 2rem; font-weight: bold; margin-bottom: 20px;">Archived Students</h2>
        <ul style="list-style-type: none; padding: 0; font-size: 1rem;">
            <% if (locals.archived_students && Array.isArray(locals.archived_students.rows) && locals.archived_students.rows.length > 0) { %>
                <% locals.archived_students.rows.forEach(student => { %>
                    <li style="padding: 8px 0; border-bottom: 1px solid #ddd; display: flex; justify-content: space-between; align-items: center;">
                        <span style="line-height: 1.5;"><%= student.name %> - <%= student.email_id %></span>
                        ---------------------TODO: <button class="unarchive_student_button" data-student-id="<%= student.id %>" style="padding: 8px 16px; background-color: #009f18; color: white; border: none; border-radius: 5px; cursor: pointer; margin-left: auto;">Unarchive</button>
                    </li>
                <% }); %>
            <% } else { %>
                <li style="padding: 12px; text-align: center;">No students found.</li>
            <% } %>
        </ul>
        
            
        
        <h2 style="font-size: 2rem; font-weight: bold; margin-top: 40px; margin-bottom: 20px;">Archived Jobs Data</h2>
        <table style="width: 100%; border-collapse: collapse; margin-bottom: 20px;">
            <thead>
            <tr>
                <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Title</th>
                <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Professor Name</th>
                <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Author</th>
                <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Conference</th>
                <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Status</th>
                <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Link</th>
                <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Date</th>
                <th style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; background-color: #f2f2f2; font-weight: bold;">Unarchive</th>
            </tr>
            </thead>
            <tbody>
            <% if (locals.archived_jobs && Array.isArray(locals.archived_jobs.rows) && locals.archived_jobs.rows.length > 0) { %>
                <% locals.archived_jobs.rows.forEach(job => { %>
                    <tr>
                        <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 1rem;"><%= job.title %></td>
                        <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 1rem;"><%= job.prof_name %></td>
                        <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 1rem;"><%= job.author %></td>
                        <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 1rem;"><%= job.conference %></td>
                        <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 1rem;"><%= job.status %></td>
                        <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 1rem;">
                            <a href="<%= job.link %>" style="color: #007bff; text-decoration: none;">Link</a>
                        </td>
                        <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd; font-size: 1rem; width: 150px; white-space: nowrap;">
                            <%= job.date ? job.date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }).split(',').join(' ') : '' %>
                            <br>
                            <%= job.date ? job.date.getFullYear() : '' %>
                        </td>
                        <td style="padding: 12px; text-align: center; border-bottom: 1px solid #ddd;">
                            <button class="unarchive_job_button" data-job-id="<%= job.id %>" style="padding: 8px 16px; background-color: #009f18; color: white; border: none; border-radius: 5px; cursor: pointer;">Unarchive</button>
                        </td>
                    </tr>
                <% }); %>
            <% } else { %>
                <tr>
                    <td colspan="8" style="text-align: center; padding: 12px; font-size: 1rem;">No jobs found.</td>
                </tr>
            <% } %>
            </tbody>
        </table>
        </div>
        
        <br>
        <br>
        
        <script>
            document.getElementById('search-bar').addEventListener('input', function() {
                const query = this.value;
                if (query.length > 0) {
                    fetch(`/search?query=${query}`)
                        .then(response => response.json())
                        .then(data => {
                            const resultsDiv = document.getElementById('results');
                            resultsDiv.innerHTML = '';
                            data.forEach(student => {
                                const container = document.createElement('div');
                                container.className = 'tooltip-container';
        
                                const button = document.createElement('button');
                                button.innerText = student.name;
                                button.style = "width: 100%; padding: 10px 15px; margin-bottom: 10px; border: none; border-radius: 10px; background-color: #f9f9f9; text-align: left; font-size: 1rem; box-shadow: 0 1px 3px rgba(0,0,0,0.1); cursor: pointer; transition: all 0.3s ease;";
        
                                const tooltip = document.createElement('div');
                                tooltip.className = 'tooltip';
                                tooltip.innerText = `Add ${student.name}?`;
        
                                container.appendChild(button);
                                container.appendChild(tooltip);
                                container.addEventListener('click', () => {
                                    selectStudent(student.id);
                                });
                                resultsDiv.appendChild(container);
                            });
                        })
                        .catch(err => console.error('Error fetching students:', err));
                } else {
                    document.getElementById('results').innerHTML = '';
                }
            });
        
            document.querySelectorAll('.archive_student_button').forEach(button => {
                button.addEventListener('click', function() {
                    const studentId = this.getAttribute('data-student-id');
        
                    fetch('/prof_dashboard/archive_student', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ student_id: studentId })
                    })
                        .then(response => {
                            if (response.ok) {
                                alert("Student archived successfully.");
                                window.location.reload();
                            } else {
                                alert("Failed to archive student.");
                            }
                        })
                        .catch(error => {
                            console.error("Error:", error);
                            alert("An error occurred while archiving the student.");
                        });
                });
            });
        
            document.querySelectorAll('.archive_job_button').forEach(button => {
                button.addEventListener('click', function() {
                    const job_id = this.getAttribute('data-job-id');
        
                    fetch('/prof_dashboard/archive_job', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ job_id: job_id })
                    })
                        .then(response => {
                            if (response.ok) {
                                alert("Job archived successfully.");
                                window.location.reload();
                            } else {
                                alert("Failed to archive Job.");
                            }
                        })
                        .catch(error => {
                            console.error("Error:", error);
                            alert("An error occurred while archiving the Job.");
                        });
                });
            });
        
            function selectStudent(student_id) {
                fetch('/prof_dashboard', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ student_id }),
                })
                    .then(response => {
                        if (response.ok) {
                            window.location.reload(); // This triggers the page reload
                        } else {
                            return response.text().then(text => { throw new Error(text); });
                        }
                    })
                    .catch(err => console.error('Error selecting student:', err));
            }
        </script>
        
      </div>
      -->
      <div class="jumbotron text-center" style="margin-bottom: 20px;">
        <h1 style="font-size: 5rem; font-weight: bold;">Rema.</h1>
    
    </div>

    <!-- Section for adding students -->
<div class="container" style="position: relative;">
    <input type="text" id="student-search" placeholder="Type student name..." oninput="searchStudents()">
    <div id="student-results"></div>

    <div class="container" style="position: relative;">
        <h1 style="font-size: 2rem; font-weight: bold; margin-bottom: 20px; margin-top: 40px;">Students</h1>
        <% if (student_details_unarchived && Array.isArray(student_details_unarchived.rows) && student_details_unarchived.rows.length > 0) { %>
            <ul style="font-size: 1.2rem;">
                <% let currentType = ''; %>
                <% student_details_unarchived.rows.forEach(function(student) { %>
                    <% if (student.degree !== currentType) { %>
                        <% if (currentType !== '') { %>
            </ul>
            <% } %>
        <li><strong><%= student.degree %></strong>
            <ul>
                <% currentType = student.degree; %>
                <% } %>
                <li>
                    <%= student.student_name %>
                    <ul>
                        <li>Project Title: <%= student.project_title %></li>
                    </ul>
                    <button class="archive_student_button" data-student-id="<%= student.student_id %>">Archive</button>
                    <button class="delete_student_button" data-student-id="<%= student.student_id %>">Delete</button>
                </li>
                <% }); %>
            </ul>
            </ul>
            <% } else { %>
                <p>No students found.</p>
            <% } %>
    </div>
    <div class="container" style="position: relative;">
        <h1 style="font-size: 2rem; font-weight: bold; margin-bottom: 20px; margin-top: 40px;">Archived Students</h1>
        <% if (student_details_archived && Array.isArray(student_details_archived.rows) && student_details_archived.rows.length > 0) { %>
            <ul style="font-size: 1.2rem;">
                <% let currentType = ''; %>
                <% student_details_archived.rows.forEach(function(student) { %>
                    <% if (student.degree !== currentType) { %>
                        <% if (currentType !== '') { %>
            </ul>
            <% } %>
        <li><strong><%= student.degree %></strong>
            <ul>
                <% currentType = student.degree; %>
                <% } %>
                <li>
                    <%= student.student_name %>
                    <ul>
                        <li>Project Title: <%= student.project_title %></li>
                    </ul>
                    <button class="archive_student_button" data-student-id="<%= student.student_id %>">Un-Archive</button>
                    <button class="delete_student_button" data-student-id="<%= student.student_id %>">Delete</button>
                </li>
                <% }); %>
            </ul>
            </ul>
            <% } else { %>
                <p>No students found.</p>
            <% } %>
    </div>

   <!-- Static Info Section -->
   <style>
    .remove-btn {
        cursor: pointer;
        color: red;
        font-weight: bold;
        margin-left: 10px;
    }
</style>
</head>
<div>

<div class="col-md-3" style="background-color: #e9ecef; height: 100vh; right:0; position: fixed; z-index:4;">
<div id="static-info">
    <!-- Title Section -->
    <div class="jumbotron text-center" style="margin-bottom: 20px;">
        <h1 style="font-size: 5rem; font-weight: bold;">Rema.</h1>
    </div>

    <!-- Upcoming Deadlines Card -->
    <div class="card" style="margin-bottom: 20px;">
        <div class="card-body">
            <h2 class="card-title" style="font-size: 1.5rem; font-weight: bold;">Upcoming Deadlines</h2>
            <ul class="list-unstyled" id="deadlines-list" style="padding-left: 20px;">
                <li>Project Report: September 20, 2024<span class="remove-btn" onclick="removeItem(this)">x</span></li>
                <li>Assignment 3 Submission: September 25, 2024<span class="remove-btn" onclick="removeItem(this)">x</span></li>
                <li>Midterm Exam: October 5, 2024<span class="remove-btn" onclick="removeItem(this)">x</span></li>
                <li>Research Proposal: October 10, 2024<span class="remove-btn" onclick="removeItem(this)">x</span></li>
            </ul>
            <!-- Edit Button to Add Deadline -->
            <button class="btn btn-primary btn-sm" style="background-color:#808080"onclick="addDeadline()">Edit</button>
        </div>
    </div>

    <!-- To-Do List Card -->
    <div class="card">
        <div class="card-body">
            <h2 class="card-title" style="font-size: 1.5rem; font-weight: bold;">To-Do List</h2>
            <ul class="list-unstyled" id="todo-list" style="padding-left: 20px;">
                <li><input type="checkbox" id="task1" name="task1">
                    <label for="task1">Complete UDP Pinger assignment</label>
                    <span class="remove-btn" onclick="removeItem(this)">x</span>
                </li>
                <li><input type="checkbox" id="task2" name="task2">
                    <label for="task2">Prepare for Midterm Exam</label>
                    <span class="remove-btn" onclick="removeItem(this)">x</span>
                </li>
                <li><input type="checkbox" id="task3" name="task3">
                    <label for="task3">Finish Project Report Draft</label>
                    <span class="remove-btn" onclick="removeItem(this)">x</span>
                </li>
                <li><input type="checkbox" id="task4" name="task4">
                    <label for="task4">Read 2 Research Papers</label>
                    <span class="remove-btn" onclick="removeItem(this)">x</span>
                </li>
            </ul>
            <!-- Edit Button to Add To-Do -->
            <button class="btn btn-primary btn-sm" style="background-color:#808080" onclick="addTodo()">Edit</button>
        </div>
    </div>
</div>
</div>

<!-- JavaScript -->
<script>
    // Archiving the student
    document.querySelectorAll('.archive_student_button').forEach(button => {
        button.addEventListener('click', function () {
            const studentId = this.getAttribute('data-student-id');

            fetch('/prof_dashboard/archive_student', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({student_id: studentId})
            })
                .then(response => {
                    if (response.ok) {
                        alert("Student archived successfully.");
                        window.location.reload();
                    } else {
                        alert("Failed to archive student.");
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    alert("An error occurred while archiving the student.");
                });
        });
    });

    // Deleting the student
    document.querySelectorAll('.delete_student_button').forEach(button => {
        button.addEventListener('click', function () {
            const studentId = this.getAttribute('data-student-id');

            fetch('/delete_student', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({student_id: studentId})
            })
                .then(response => {
                    if (response.ok) {
                        alert("Student deleted successfully.");
                        window.location.reload();
                    } else {
                        alert("Failed to delete student.");
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    alert("An error occurred while deleting the student.");
                });
        });
    });


    // Function to add a new deadline

async function searchStudents() {
    const query = document.getElementById('student-search').value;

    if (query.length === 0) {
        document.getElementById('student-results').innerHTML = '';
        return;
    }

    try {
        const response = await fetch(`/search_students?query=${encodeURIComponent(query)}`);
        const students = await response.json();

        displayResults(students);
    } catch (error) {
        console.error('Error fetching students:', error);
    }
}

function displayResults(students) {

    const resultsDiv = document.getElementById('student-results');
    resultsDiv.innerHTML = ''; // Clear previous results

    students.forEach(student => {
        const button = document.createElement('button');
        button.textContent = student.name;
        button.className = 'student-button';
        button.setAttribute('data-id', student.id);

        button.addEventListener('click', () => {
            addStudentToProfessor(student.id);
        });

        resultsDiv.appendChild(button);
    });
}

async function addStudentToProfessor(studentId) {

    try {
        const response = await fetch('/prof_dashboard/add_student', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({student_id: studentId})
        });

        if (response.ok) {
            alert('Student successfully added!');
            window.location.reload(); // Optional: Reload the page after successful addition
        } else {
            alert('Error adding student.');
        }
    } catch (error) {
        console.error('Error adding student:', error);
        alert('An error occurred.');
    }
}

function addDeadline() {
    let deadline = prompt("Enter the new deadline (e.g., 'New Deadline: Date'):");
    if (deadline) {
        const ul = document.getElementById('deadlines-list');
        const li = document.createElement('li');
        li.innerHTML = `${deadline}<span class="remove-btn" onclick="removeItem(this)">x</span>`;
        ul.appendChild(li);
    }
}

// Function to add a new To-Do item
function addTodo() {
    let todo = prompt("Enter the new To-Do item:");
    if (todo) {
        const ul = document.getElementById('todo-list');
        const li = document.createElement('li');
        li.innerHTML = `<input type="checkbox"> ${todo}<span class="remove-btn" onclick="removeItem(this)">x</span>`;
        ul.appendChild(li);
    }
}

// Function to remove an item from the list
function removeItem(element) {
    element.parentElement.remove();
}
</script>
  
</div>
    </div>
</div>

<%- include('partials/footer') %>
    </div>