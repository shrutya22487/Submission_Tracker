<%- include('partials/header') %>

    <div class="container-fluid" style="background-color:#fff;">
        <div class="row">

            <!-- Nav bar section -->
            <%- include('partials/nav_bar.ejs')%>
            <!--Working Console-->
            <div class="col-md-6"
                style=" background-color: #f9f9f9; width: 100%; height: 100vh; margin-left: auto; margin-right: auto; padding: 20px; position: relative;">
            <div class="jumbotron text-center" style="margin-bottom: 20px;">
            <h1 style="font-size: 4rem; font-weight: bold; color: #333;">My Students</h1>
            </div>


                <!-- Section for adding students -->
             
                <div class="search-container">
                    <input type="text" id="student-search" placeholder="Type student name..."
                        oninput="searchStudents()">
                    <div id="student-results" class="results-box"></div>
                </div>
           


<!--                UNARCHIVED STUDENTS-->
<div class="container" style="position: relative;">
    <h1 style="font-size: 2rem; font-weight: bold; margin-bottom: 20px; margin-top: 40px; display: inline-block;">Students</h1>
    <!-- Button to toggle Archive and Delete buttons -->
    <button id="toggle-buttons" class="btn btn-secondary" style="position: absolute; top: 20px; right: 20px;">Edit</button>

    <% if (student_details_unarchived && Array.isArray(student_details_unarchived.rows) && student_details_unarchived.rows.length > 0) { %>
        <ul style="font-size: 1.2rem; list-style: none; padding-left: 0;">
            <% let currentType = ''; %>
            <% let current_id = ''; %>

            <% student_details_unarchived.rows.forEach(function(student) { %>
                <% if (student.degree !== currentType) { %>
                    <% if (currentType !== '' ) { %>
                        </ul> <!-- Closing tag for previous student degree -->
                    <% } %>

                    <li>
                        
                        <strong style="font-size: 1.5rem; font-weight: bold;"><%= student.degree %></strong>

                        <ul style="padding-left: 20px;list-style-type:none;"> <!-- Opening tag for new student degree section -->
                            <% currentType = student.degree; %>
                            
                        <% } %>
                       
                        

                        <% if (student.student_id !== current_id) { %>
                            <% if (current_id !== '') { %>
                                </ul> <!-- Closing  for previous student projects -->
                            </li>
                            <% } %>

                            <% current_id = student.student_id; %>
                            <li style="margin-bottom: 15px;">
                                <strong><%= student.student_name %></strong>

                                <div class="button-group" style="margin-top: 10px; margin-bottom: 10px;">
                                    <button class="btn btn-warning archive_student_button"
                                            data-student-id="<%= student.student_id %>"
                                            style="font-size: 0.8rem; padding: 5px 10px; height: 30px; display: none;">Archive</button>
                                    <button class="btn btn-danger delete_student_button"
                                            data-student-id="<%= student.student_id %>"
                                            style="font-size: 0.8rem; padding: 5px 10px; height: 30px; display: none;">Delete</button>
                                </div>

                                <ul> <!-- Start new project list for the student -->
                        <% } %>

                        <% student.project_titles.split(',').forEach(function(project_title) { %>
                            <li>Project Title: <%= project_title.trim() %></li>
                        <% }); %>

                        <% }); %>

                    </ul> <!-- Closing last student's project list -->
                </li> <!-- Closing last student's list item -->
            </ul> <!-- Closing last degree section list -->
        <% } else { %>
            <p>No students found.</p>
        <% } %>
   
</div>

<!--                ARCHIVED STUDENTS-->
<div class="container" style="position: relative;">
    <h1 style="font-size: 2rem; font-weight: bold; margin-bottom: 20px; margin-top: 40px;">Archived Students</h1>
    
    <!-- Button to toggle Archive and Delete buttons -->

    <% if (student_details_archived && Array.isArray(student_details_archived.rows) && student_details_archived.rows.length > 0) { %>
        <ul style="font-size: 1.2rem; list-style: none; padding-left: 0;">
            <% let currentType = ''; %>
            <% let current_id = ''; %>

            <% student_details_archived.rows.forEach(function(student) { %>
                <% if (student.degree !== currentType) { %>
                    <% if (currentType !== '' ) { %>
                        </ul> <!-- Closing tag for previous student degree -->
                    <% } %>

                    <li>
                        <strong style="font-size: 1.5rem; font-weight: bold;"><%= student.degree %></strong>
                        <ul style="padding-left: 20px; list-style-type:none;"> <!-- Opening tag for new student degree section -->
                            <% currentType = student.degree; %>
                <% } %>

                <% if (student.student_id !== current_id) { %>
                    <% if (current_id !== '') { %>
                        </ul> <!-- Closing tag for previous student projects -->
                    </li>
                    <% } %>

                    <% current_id = student.student_id; %>
                    <li style="margin-bottom: 15px;">
                        <strong><%= student.student_name %></strong>

                        <div class="button-group" style="margin-top: 10px; margin-bottom: 10px;">
                            <button class="btn btn-warning archive_student_button"
                                    data-student-id="<%= student.student_id %>"
                                    style="font-size: 0.8rem; padding: 5px 10px; height: 30px; display: none;">Unrchive</button>
                            <button class="btn btn-danger delete_student_button"
                                    data-student-id="<%= student.student_id %>"
                                    style="font-size: 0.8rem; padding: 5px 10px; height: 30px; display: none;">Delete</button>
                        </div>

                        <ul> <!-- Start new project list for the student -->
                <% } %>

                <% student.project_titles.split(',').forEach(function(project_title) { %>
                    <li>Project Title: <%= project_title.trim() %></li>
                <% }); %>

            <% }); %>

            </ul> <!-- Closing last student's project list -->
        </li> <!-- Closing last student's list item -->
        </ul> <!-- Closing last degree section list -->
    <% } else { %>
        <p>No students found.</p>
    <% } %>

</div>
<br>
            </div>

            <!--todos and deadlines-->
            <%- include('partials/task_mgmt_prof.ejs')%>

    </div>

</div>
<style>
    .body {
        font-size: 1rem;
    }

    .archive_student_button {
        background-color: #696969;

        color: #fff;
        /* Grey color */
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .archive_student_button:hover {
        color: #fff;
        background-color: #696969 !important;
        /* Darker grey on hover */
    }
    

    body {
        display: flex;
        justify-content: center; /* Horizontally center the search container */
        align-items: center;     /* Vertically center the search container */
        height: 100vh;           /* Full height of the viewport */
        margin: 0;               /* Remove default body margin */
        background-color: #f9f9f9; /* Optional: background color */
    }

    .search-container {
        
        position: relative; /* For positioning the results box */
        max-width: 600px;    /* Max width for the search bar */
        width: 100%;         /* Make search bar responsive */
        
    }

    #student-search {
        
        width: 100%;         /* Full width of the container */
        padding: 10px 20px;  /* Padding for a better look */
        border-radius: 50px; /* Rounded corners */
        border: 1px solid #ccc; /* Light border */
        font-size: 1rem;     /* Font size for the text */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Light shadow for depth */
    }

    .results-box {
        position: absolute;  /* Position results box below the input */
        top: 100%;           /* Place the box directly below the input */
        left: 0;
        right: 0;
        background-color: white;
        border: 1px solid #ccc;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Shadow for results box */
        z-index: 1000;       /* Ensure it appears above other content */
        display: none;       /* Initially hide results box */
    }

    .results-box button {
        width: 100%;         /* Full width buttons */
        padding: 10px;       /* Button padding */
        border: none;
        background: transparent; /* Transparent background */
        text-align: left;    /* Align text to the left */
        cursor: pointer;    /* Pointer cursor on hover */
    }

    .results-box button:hover {
        background-color: #f0f0f0; /* Highlight button on hover */
    }

    .remove-btn {
        cursor: pointer;
        color: red;
        font-weight: bold;
        margin-left: 10px;
    }
</style>


<script>

     // JavaScript to toggle visibility of archive and delete buttons
     document.getElementById('toggle-buttons').addEventListener('click', function() {
        // Select all archive and delete buttons
        const archiveButtons = document.querySelectorAll('.archive_student_button');
        const deleteButtons = document.querySelectorAll('.delete_student_button');

        // Toggle visibility
        archiveButtons.forEach(button => {
            button.style.display = button.style.display === 'none' ? 'inline-block' : 'none';
        });
        deleteButtons.forEach(button => {
            button.style.display = button.style.display === 'none' ? 'inline-block' : 'none';
        });
    });
        // Archiving the student
        document.querySelectorAll('.archive_student_button').forEach(button => {
        button.addEventListener('click', function () {
            const studentId = this.getAttribute('data-student-id');

            fetch('/prof_dashboard/archive_student', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ student_id: studentId })
            })
                .then(response => {
                    if (response.ok) {
                        alert("Student archived successfully.");
                        window.location.reload();
                    } else {
                        alert("Failed to archive student.");
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    alert("An error occurred while archiving the student.");
                });
        });
    });

        // Deleting the student
        document.querySelectorAll('.delete_student_button').forEach(button => {
        button.addEventListener('click', function () {
            const studentId = this.getAttribute('data-student-id');

            fetch('/delete_student', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ student_id: studentId })
            })
                .then(response => {
                    if (response.ok) {
                        alert("Student deleted successfully.");
                        window.location.reload();
                    } else {
                        alert("Failed to delete student.");
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    alert("An error occurred while deleting the student.");
                });
        });
    });

 
        // Function to add a new deadline

        async function searchStudents() {
        const query = document.getElementById('student-search').value;

        const resultsDiv = document.getElementById('student-results');

        if (query.length === 0) {
        resultsDiv.innerHTML = '';
        resultsDiv.style.display = 'none'; // Hide results box
        return;
    }

        try {
        const response = await fetch(`/search_students?query=${encodeURIComponent(query)}`);
        const students = await response.json();

        displayResults(students);
    } catch (error) {
        console.error('Error fetching students:', error);
    }
    }

        function displayResults(students) {
        const resultsDiv = document.getElementById('student-results');
        resultsDiv.innerHTML = ''; // Clear previous results

        if (students.length === 0) {
        resultsDiv.style.display = 'none'; // Hide if no results
        return;
    } else {
        resultsDiv.style.display = 'block'; // Show results box
    }

        students.forEach(student => {
        const button = document.createElement('button');
        button.textContent = student.name;
        button.className = 'student-button';
        button.setAttribute('data-id', student.id);

        button.addEventListener('click', () => {
        addStudentToProfessor(student.id);
    });

        resultsDiv.appendChild(button);
    });
    }

        async function addStudentToProfessor(studentId) {

        try {
        const response = await fetch('/prof_dashboard/add_student', {
        method: 'POST',
        headers: {
        'Content-Type': 'application/json'
    },
        body: JSON.stringify({ student_id: studentId })
    });

        if (response.ok) {
        alert('Student successfully added!');
        window.location.reload(); // Optional: Reload the page after successful addition
    } else {
        alert('Error adding student.');
    }
    } catch (error) {
        console.error('Error adding student:', error);
        alert('An error occurred.');
    }
    }

        function addDeadline() {
        let deadline = prompt("Enter the new deadline (e.g., 'New Deadline: Date'):");
        if (deadline) {
        const ul = document.getElementById('deadlines-list');
        const li = document.createElement('li');
        li.innerHTML = `${deadline}<span class="remove-btn" onclick="removeItem(this)">x</span>`;
        ul.appendChild(li);
    }
    }
</script>

<%- include('partials/footer') %>