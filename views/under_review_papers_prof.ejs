<%- include('partials/header') %>

<div class="container-fluid" style="position:relative;">
    <div class="row">

        <%- include('partials/nav_bar.ejs')%>

        <%- include('partials/view_project.ejs')%>

        <!--Prof to do section-->
        <%- include('partials/task_mgmt_prof.ejs')%>

    </div>
</div>

<style>
    /* Search Results Box Styles */
    /* Search Results Box Styles */
    .results-box {
        position: absolute;
        z-index: 1000;
        background-color: #fff;
        width: calc(100% - 20px);
        /* Full width minus padding */
        max-width: 600px;
        padding: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        border: 1px solid #ccc;
        margin-top: 5px;
        /* Space between input and results */
        left: 50%;
        /* Center the box */
        transform: translateX(-50%);
        /* Adjust for the width of the box */
    }


    .results-box button {
        width: 100%;
        padding: 10px;
        border: none;
        background: transparent;
        text-align: left;
        cursor: pointer;
        border-radius: 4px;
        /* Rounded corners for buttons */
        transition: background-color 0.3s;
        /* Smooth transition for hover */
    }

    .results-box button:hover {
        background-color: #f0f0f0;
        /* Change background on hover */
    }

    /* Modal Styles (if needed) */
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background-color: #fff;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 500px;
    }

    .close-btn {
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

    .remove-btn {
        cursor: pointer;
        color: red;
        font-weight: bold;
        margin-left: 10px;
    }
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    // Open the edit modal and fetch the project details
    function openEditModal(projectId) {
        // Open the modal
        document.getElementById('edit-project-modal').style.display = 'block';

        // Fetch current project details to pre-fill the form
        fetch(`/get_project/${projectId}`)
            .then(response => response.json())
            .then(data => {
                // console.log(data);
                // Pre-fill the form with existing project data
                document.getElementById('search-project_id').value = data.id;
                document.getElementById('search-title').value = data.title || '';
                document.getElementById('search-conference').value = data.conference || '';
                document.getElementById('search-status').value = data.status || '';
                document.getElementById('search-link_1').value = data.link_1 || '';
                document.getElementById('search-link_2').value = data.link_2 || '';
                document.getElementById('search-submitted_date').value = data.submitted_date ? data.submitted_date.split('T')[0] : '';
                document.getElementById('search-deadline_date').value = data.deadline_date ? data.deadline_date.split('T')[0] : '';
            });
    }

    // Close the modal
    function closeEditModal() {
        document.getElementById('edit-project-modal').style.display = 'none';
    }

    // editing a project
    function edit_project() {
        const projectId = document.getElementById('search-project_id').value;
        const title = document.getElementById('search-title').value;
        const conference = document.getElementById('search-conference').value;
        const status = document.getElementById('search-status').value;
        const link_1 = document.getElementById('search-link_1').value;
        const link_2 = document.getElementById('search-link_2').value;
        const submitted_date = document.getElementById('search-submitted_date').value;
        const deadline_date = document.getElementById('search-deadline_date').value;

        // Send AJAX request to update project details
        fetch('/edit_project', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                project_id: projectId,
                title: title,
                conference: conference,
                status: status,
                link_1: link_1,
                link_2: link_2,
                submitted_date: submitted_date,
                deadline_date: deadline_date,
            })
        })
            .then(response => {
                if (response.ok) {
                    alert('Project updated successfully');
                    window.location.reload();  // Reload page after successful update
                } else {
                    alert('Error updating project');
                }
            })
            .catch(error => {
                console.error('Error updating project:', error);
                alert('An error occurred.');
            });
    }

    function add_project() {
        // Get the form values
        const formData = {
            title: document.getElementById('title').value,
            conference: document.getElementById('conference').value,
            status: document.getElementById('status').value,
            link_1: document.getElementById('link_1').value,
            link_2: document.getElementById('link_2').value,
            submitted_date: document.getElementById('submitted_date').value,
            deadline_date: document.getElementById('deadline_date').value,
        };

        // Use fetch API to send data
        fetch('/add_paper', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
            .then(response => {
                if (response.ok) {
                    alert('Project added successfully');
                    window.location.href = '/prof_dashboard/under_review_papers'; // Redirect on success
                } else {
                    return response.json().then(error => {
                        console.error('Error:', error);
                        alert('An error occurred while adding the project');
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while adding the project');
            });

        return false; // Prevent default form submission (page reload)
    }

    // Archiving project
    function archive_project(projectId) {
        // const projectId = this.getAttribute('data-project-id');

        fetch('/prof_dashboard/archive_project', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ project_id: projectId })
        })
            .then(response => {
                if (response.ok) {
                    alert("Project archived successfully.");
                    window.location.reload();
                } else {
                    alert("Failed to archive Project.");
                }
            })
            .catch(error => {
                console.error("Error:", error);
                alert("An error occurred while archiving the project.");
            });

    }

    // Deleting project
    function delete_project(projectId) {

        fetch('/prof_dashboard/delete_project', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ project_id: projectId })
        })
            .then(response => {
                if (response.ok) {
                    alert("project deleted successfully.");
                    window.location.reload();
                } else {
                    alert("Failed to delete project.");
                }
            })
            .catch(error => {
                console.error("Error:", error);
                alert("An error occurred while deleting the project.");
            });
    }

    // Toggle search bar visibility
    function toggleSearchBar(projectId) {
        const searchBar = document.getElementById(`search-bar-${projectId}`);
        searchBar.style.display = searchBar.style.display === 'none' ? 'block' : 'none';
    }

    // Search function
    async function searchStudents(projectId) {
        const query = document.getElementById(`student-search-project-${projectId}`).value;

        if (query.length === 0) {
            const resultsDiv = document.getElementById(`student-results-${projectId}`);
            resultsDiv.innerHTML = '';
            resultsDiv.style.display = 'none';
            return;
        }

        try {
            const response = await fetch(`/search_students_prof?query=${encodeURIComponent(query)}`);
            const students = await response.json();
            displayResults(students, projectId);
        } catch (error) {
            console.error('Error fetching students:', error);
        }
    }

    // Display results for the specific project
    function displayResults(students, projectId) {
        const resultsDiv = document.getElementById(`student-results-${projectId}`);
        resultsDiv.innerHTML = ''; // Clear previous results

        if (students.length > 0) {
            resultsDiv.style.display = 'block'; // Show results box
            students.forEach(student => {
                const button = document.createElement('button');
                button.textContent = student.name;
                button.className = 'student-button';
                button.setAttribute('data-id', student.id);

                button.addEventListener('click', () => {
                    addStudentToProfessor(student.id, projectId); // Pass projectId
                });

                resultsDiv.appendChild(button);
            });
        } else {
            resultsDiv.style.display = 'none'; // Hide if no results
        }
    }

    // Add student function
    async function addStudentToProfessor(studentId, projectId) {
        try {
            const response = await fetch('/prof_dashboard/add_student_to_project', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    student_id: studentId,
                    project_id: projectId
                })
            });

            if (response.ok) {
                alert('Student successfully added!');
                window.location.reload();
            } else {
                alert('Error adding student.');
            }
        } catch (error) {
            console.error('Error adding student:', error);
            alert('An error occurred.');
        }
    }

    function addDeadline() {
        let deadline = prompt("Enter the new deadline (e.g., 'New Deadline: Date'):");
        if (deadline) {
            const ul = document.getElementById('deadlines-list');
            const li = document.createElement('li');
            li.innerHTML = `${deadline}<span class="remove-btn" onclick="removeItem(this)">x</span>`;
            ul.appendChild(li);
        }
    }

    // to delete a meeting note
    function deleteMeetingNotes(Id) {
        if (confirm('Are you sure you want to delete this meeting note?')) {
            $.ajax({
                url: '/prof_dashboard/delete_meeting_notes',
                type: 'POST',
                data: { id: Id },
                success: function () {
                    alert('Meeting note successfully deleted!');
                    window.location.reload();
                },
                error: function () {
                    alert('Error deleting meeting note');
                }
            });
        }
    }

</script>

<%- include('partials/footer') %>