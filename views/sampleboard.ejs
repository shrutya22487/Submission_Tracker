<%- include('partials/header') %>

<!--  -->
<!-- TO USE THIS, JUST ADD ENTIRE EJS CODE TO THE WORKING CONSOLE SECTION -->
<!-- TO USE THIS, JUST ADD ENTIRE EJS CODE TO THE WORKING CONSOLE SECTION -->
<!-- TO USE THIS, JUST ADD ENTIRE EJS CODE TO THE WORKING CONSOLE SECTION -->
<!-- TO USE THIS, JUST ADD ENTIRE EJS CODE TO THE WORKING CONSOLE SECTION -->
<!-- TO USE THIS, JUST ADD ENTIRE EJS CODE TO THE WORKING CONSOLE SECTION -->
<!--  -->

<div class="container-fluid">
    <div class="row">
    

    <!-- Nav bar section -->
    <div class="col-md-3 sidebar" style="background-color: #e9ecef; height:100vh; position:fixed; z-index : 2;">
        <div class="jumbotron text-center" style="margin-bottom: 20px;">
            <h1 style="font-size: 5rem; font-weight: bold;">Rema.</h1>
        
        </div>
        <nav class="nav flex-column" style="margin:10px;">
            <a class="btn btn-dark btn-lg" href="./sampleboard" role="button" 
               style="color: #000; font-weight:bold; margin-bottom:1%; padding:3%; background-color: #fff; border-color: #303030; border-width:2px;" 
               onmouseover="this.style.backgroundColor='#303030'; this.style.borderColor='#303030'; this.style.color='#fff';" 
               onmouseout="this.style.backgroundColor='#fff'; this.style.borderColor='#303030'; this.style.color='#000';">
               Students
            </a>
            <a class="btn btn-dark btn-lg" href="#" role="button" 
               style="color:black; margin-top: 0.5%; margin-bottom:1%; padding:3%; background-color: #fff; border-color: #fff;" 
               onmouseover="this.style.backgroundColor='#303030'; this.style.borderColor='#303030'; this.style.color='#fff';" 
               onmouseout="this.style.backgroundColor='#fff'; this.style.borderColor='#fff'; this.style.color='#000';">
               Research Projects
            </a>
            <a class="btn btn-dark btn-lg" href="#" role="button" 
               style="color:black; margin-top: 0.5%; margin-bottom:1%; padding:3%; background-color: #fff; border-color: #fff;" 
               onmouseover="this.style.backgroundColor='#303030'; this.style.borderColor='#303030'; this.style.color='#fff';" 
               onmouseout="this.style.backgroundColor='#fff'; this.style.borderColor='#fff'; this.style.color='#000';">
               Under Review Papers
            </a>
            <a class="btn btn-dark btn-lg" href="#" role="button" 
               style="color:black; margin-top: 0.5%; margin-bottom:1%; padding:3%; background-color: #fff; border-color: #fff;" 
               onmouseover="this.style.backgroundColor='#303030'; this.style.borderColor='#303030'; this.style.color='#fff';" 
               onmouseout="this.style.backgroundColor='#fff'; this.style.borderColor='#fff'; this.style.color='#000';">
               Sponsored Projects
            </a>
            <a class="btn btn-dark btn-lg" href="#" role="button" 
               style="color:black; margin-top: 0.5%; margin-bottom:1%; padding:3%; background-color: #fff; border-color: #ccc;" 
               onmouseover="this.style.backgroundColor='#303030'; this.style.borderColor='#303030'; this.style.color='#fff';" 
               onmouseout="this.style.backgroundColor='#fff'; this.style.borderColor='#ccc'; this.style.color='#000';">
               Reading List
            </a>
            <a class="btn btn-dark btn-lg" href="/conferences" role="button" 
               style="color:black; margin-top: 0.5%; margin-bottom:1%; padding:3%; background-color: #fff; border-color: #fff;" 
               onmouseover="this.style.backgroundColor='#303030'; this.style.borderColor='#303030'; this.style.color='#fff';" 
               onmouseout="this.style.backgroundColor='#fff'; this.style.borderColor='#fff'; this.style.color='#000';">
               Conferences
            </a>
            <a class="btn btn-dark btn-lg" href="/logout" role="button" 
               style="color:black; margin-top: 0.5%; margin-bottom:1%; padding:3%; background-color: #fff; border-color: #fff;" 
               onmouseover="this.style.backgroundColor='#a40000'; this.style.borderColor='#a40000'; this.style.color='#fff';" 
               onmouseout="this.style.backgroundColor='#fff'; this.style.borderColor='#fff'; this.style.color='#000';">
               Logout
            </a>
        </nav>
        

    </div>

    <!-- Working console section -->
    <div class="col-md-6" style="background-color: #fff; width: 100%; height: 100vh; margin-left: auto; margin-right: auto;">
      <div id="working-console">

        <div class="jumbotron text-center" style="margin-bottom: 20px;">
            <h1 style="font-size: 5rem; font-weight: bold;">Professor Dashboard</h1>
        
        </div>
        
        <!-- Section for adding students -->
        <div class="container" style="position: relative;">
            <h2 style="font-size: 2rem; font-weight: bold; margin-bottom: 20px;margin-top:40px;">Student Search</h2>
            <form id="search-form" style="margin-bottom: 20px; display: flex; justify-content: center; align-items: center;">
                <input type="text" id="search-bar" name="q" placeholder="Search" required 
                       style="width: 100%; max-width: 600px; padding: 12px 20px; border: 1px solid #ccc; border-radius: 50px; font-size: 1rem; outline: none; transition: all 0.3s ease;" 
                       autocomplete="off">
            </form>
            
            <div id="results" style="position: absolute; z-index: 1000; background-color: white; width: 100%; max-width: 600px; left: 50%; transform: translateX(-50%); top: 100%; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); border-radius: 10px; padding: 10px;">
                <!-- Search results will be displayed here -->
            </div>
        </div>
        <br>
        <br>

        <script>
            document.getElementById('search-bar').addEventListener('input', function() {
                const query = this.value;
                if (query.length > 0) {
                    fetch(`/search?query=${query}`)
                        .then(response => response.json())
                        .then(data => {
                            const resultsDiv = document.getElementById('results');
                            resultsDiv.innerHTML = '';
                            data.forEach(student => {
                                const container = document.createElement('div');
                                container.className = 'tooltip-container';
        
                                const button = document.createElement('button');
                                button.innerText = student.name;
                                button.style = "width: 100%; padding: 10px 15px; margin-bottom: 10px; border: none; border-radius: 10px; background-color: #f9f9f9; text-align: left; font-size: 1rem; box-shadow: 0 1px 3px rgba(0,0,0,0.1); cursor: pointer; transition: all 0.3s ease;";
        
                                const tooltip = document.createElement('div');
                                tooltip.className = 'tooltip';
                                tooltip.innerText = `Add ${student.name}?`;
        
                                container.appendChild(button);
                                container.appendChild(tooltip);
                                container.addEventListener('click', () => {
                                    selectStudent(student.id);
                                });
                                resultsDiv.appendChild(container);
                            });
                        })
                        .catch(err => console.error('Error fetching students:', err));
                } else {
                    document.getElementById('results').innerHTML = '';
                }
            });
        
            document.querySelectorAll('.archive_student_button').forEach(button => {
                button.addEventListener('click', function() {
                    const studentId = this.getAttribute('data-student-id');
        
                    fetch('/prof_dashboard/archive_student', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ student_id: studentId })
                    })
                        .then(response => {
                            if (response.ok) {
                                alert("Student archived successfully.");
                                window.location.reload();
                            } else {
                                alert("Failed to archive student.");
                            }
                        })
                        .catch(error => {
                            console.error("Error:", error);
                            alert("An error occurred while archiving the student.");
                        });
                });
            });
        
            document.querySelectorAll('.archive_job_button').forEach(button => {
                button.addEventListener('click', function() {
                    const job_id = this.getAttribute('data-job-id');
        
                    fetch('/prof_dashboard/archive_job', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ job_id: job_id })
                    })
                        .then(response => {
                            if (response.ok) {
                                alert("Job archived successfully.");
                                window.location.reload();
                            } else {
                                alert("Failed to archive Job.");
                            }
                        })
                        .catch(error => {
                            console.error("Error:", error);
                            alert("An error occurred while archiving the Job.");
                        });
                });
            });
        
            function selectStudent(student_id) {
                fetch('/prof_dashboard', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ student_id }),
                })
                    .then(response => {
                        if (response.ok) {
                            window.location.reload(); // This triggers the page reload
                        } else {
                            return response.text().then(text => { throw new Error(text); });
                        }
                    })
                    .catch(err => console.error('Error selecting student:', err));
            }
        </script>
        
      </div>
    </div>

    <!-- Static info section -->
   <!-- Static Info Section -->
   <style>
    .remove-btn {
        cursor: pointer;
        color: red;
        font-weight: bold;
        margin-left: 10px;
    }
</style>
</head>
<body>

<div class="col-md-3" style="background-color: #e9ecef; height: 100vh; right:0; position: fixed; z-index:4;">
<div id="static-info">
    <!-- Title Section -->
    <div class="jumbotron text-center" style="margin-bottom: 20px;">
        <h1 style="font-size: 5rem; font-weight: bold;">Rema.</h1>
    </div>

    <!-- Upcoming Deadlines Card -->
    <div class="card" style="margin-bottom: 20px;">
        <div class="card-body">
            <h2 class="card-title" style="font-size: 1.5rem; font-weight: bold;">Upcoming Deadlines</h2>
            <ul class="list-unstyled" id="deadlines-list" style="padding-left: 20px;">
                <li>Project Report: September 20, 2024<span class="remove-btn" onclick="removeItem(this)">x</span></li>
                <li>Assignment 3 Submission: September 25, 2024<span class="remove-btn" onclick="removeItem(this)">x</span></li>
                <li>Midterm Exam: October 5, 2024<span class="remove-btn" onclick="removeItem(this)">x</span></li>
                <li>Research Proposal: October 10, 2024<span class="remove-btn" onclick="removeItem(this)">x</span></li>
            </ul>
            <!-- Edit Button to Add Deadline -->
            <button class="btn btn-primary btn-sm" style="background-color:#808080"onclick="addDeadline()">Edit</button>
        </div>
    </div>

    <!-- To-Do List Card -->
    <div class="card">
        <div class="card-body">
            <h2 class="card-title" style="font-size: 1.5rem; font-weight: bold;">To-Do List</h2>
            <ul class="list-unstyled" id="todo-list" style="padding-left: 20px;">
                <li><input type="checkbox" id="task1" name="task1">
                    <label for="task1">Complete UDP Pinger assignment</label>
                    <span class="remove-btn" onclick="removeItem(this)">x</span>
                </li>
                <li><input type="checkbox" id="task2" name="task2">
                    <label for="task2">Prepare for Midterm Exam</label>
                    <span class="remove-btn" onclick="removeItem(this)">x</span>
                </li>
                <li><input type="checkbox" id="task3" name="task3">
                    <label for="task3">Finish Project Report Draft</label>
                    <span class="remove-btn" onclick="removeItem(this)">x</span>
                </li>
                <li><input type="checkbox" id="task4" name="task4">
                    <label for="task4">Read 2 Research Papers</label>
                    <span class="remove-btn" onclick="removeItem(this)">x</span>
                </li>
            </ul>
            <!-- Edit Button to Add To-Do -->
            <button class="btn btn-primary btn-sm" style="background-color:#808080" onclick="addTodo()">Edit</button>
        </div>
    </div>
</div>
</div>

<!-- JavaScript -->
<script>
// Function to add a new deadline
function addDeadline() {
    let deadline = prompt("Enter the new deadline (e.g., 'New Deadline: Date'):");
    if (deadline) {
        const ul = document.getElementById('deadlines-list');
        const li = document.createElement('li');
        li.innerHTML = `${deadline}<span class="remove-btn" onclick="removeItem(this)">x</span>`;
        ul.appendChild(li);
    }
}

// Function to add a new To-Do item
function addTodo() {
    let todo = prompt("Enter the new To-Do item:");
    if (todo) {
        const ul = document.getElementById('todo-list');
        const li = document.createElement('li');
        li.innerHTML = `<input type="checkbox"> ${todo}<span class="remove-btn" onclick="removeItem(this)">x</span>`;
        ul.appendChild(li);
    }
}

// Function to remove an item from the list
function removeItem(element) {
    element.parentElement.remove();
}
</script>
  
    
    </div>
</div>

<%- include('partials/footer') %>
