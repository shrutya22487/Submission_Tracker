<!-- Prof To-Do Section -->
<div class="col-md-3 col-sm-3 col-3"
    style="background-color: #f8f9fa; height: 100vh; right: 0; position: fixed; z-index: 10; padding: 20px;">
    <div id="static-info">
        <!-- Title Section -->
        <div class="text-center mb-4">
            <h1 class="display-4" style="font-weight: bold;">Rema.</h1>
        </div>

        <!-- Upcoming Deadlines Card -->
        <div class="card mb-3 shadow-sm">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Upcoming Deadlines</h5>
            </div>
            <div class="card-body">
                <div id="deadline-list">
                    <!-- Deadlines will be appended here -->
                    <ul id="deadline-items" class="list-unstyled"></ul>
                </div>

                <!-- Button to toggle add deadline form -->
                <button class="btn btn-link btn-block text-primary" data-toggle="collapse"
                    data-target="#addDeadlineForm" aria-expanded="false">
                    Add New Deadline
                </button>

                <!-- Collapsible Add Deadline Form -->
                <div id="addDeadlineForm" class="collapse mt-3">
                    <form id="add-deadline-form">
                        <div class="form-group">
                            <label for="task">Task:</label>
                            <input type="text" id="task" name="task" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="date">Date:</label>
                            <input type="date" id="date" name="date" class="form-control" required>
                        </div>
                        <button type="submit" class="btn btn-primary btn-block">Add Deadline</button>
                    </form>
                </div>
            </div>
        </div>

        <!-- To-Do List Card -->
        <div class="card shadow-sm">
            <div class="card-header bg-success text-white">
                <h5 class="mb-0">To-Do List</h5>
            </div>
            <div class="card-body">
                <div id="todo-list">
                    <!-- Todos will be appended here -->
                    <ul id="todo-items" class="list-unstyled"></ul>
                </div>

                <!-- Button to toggle add to-do form -->
                <button class="btn btn-link btn-block text-success" data-toggle="collapse" data-target="#addTodoForm"
                    aria-expanded="false">
                    Add New Todo
                </button>

                <!-- Collapsible Add To-Do Form -->
                <div id="addTodoForm" class="collapse mt-3">
                    <form id="add-todo-form">
                        <div class="form-group">
                            <label for="task_todo">Task:</label>
                            <input type="text" id="task_todo" name="task" class="form-control" required>
                        </div>
                        <div class="form-group">
                            <label for="date_todo">Date:</label>
                            <input type="date" id="date_todo" name="date" class="form-control">
                        </div>
                        <button type="submit" class="btn btn-success btn-block">Add Todo</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Include Bootstrap JS for collapse functionality -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- Custom CSS for aligned delete buttons -->
<style>
    #deadline-items li,
    #todo-items li {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 8px 0;
    }

    .delete-btn,
    .delete-btn1 {
        margin-left: auto;
    }
</style>

<script>
    ////////////////////////////// TO-DO FUNCTIONS ///////////////////////////////////
    // Fetch and display todos when the page loads
    $(document).ready(function () {
        fetchTodos();

        // AJAX request to fetch the list of todos
        function fetchTodos() {
            $.ajax({
                url: '/prof_dashboard/todo', // URL to your backend route
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    const todoList = $('#todo-items');
                    todoList.empty(); // Clear the list before appending new items

                    if (data.length > 0) {
                        data.forEach(function (todo) {
                            todoList.append(`<li id="todo-${todo.id}">
                                    <span><strong>Task:</strong> ${todo.task}</span>
                                    <button class="delete-btn1 btn btn-sm btn-danger" data-id="${todo.id}">Delete</button>
                                </li>`);
                        });

                        // Attach delete event handler after todos are rendered
                        attachDeleteHandlers1();
                    } else {
                        $('#todo-list').html('<p>No todos found.</p>');
                    }
                },
                error: function (error) {
                    console.error("Error fetching todos:", error);
                }
            });
        }

        // Function to attach delete event handlers to delete buttons
        function attachDeleteHandlers1() {
            $('.delete-btn1').on('click', function () {
                const todoId = $(this).data('id');

                if (confirm('Are you sure you want to delete this todo?')) {
                    $.ajax({
                        url: '/prof_dashboard/delete_todo',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ todo_id: todoId }),
                        success: function (response) {
                            alert(response.message); // Show success message

                            // Remove the deleted todo from the UI
                            $(`#todo-${todoId}`).remove();
                        },
                        error: function (error) {
                            console.error("Error deleting todo:", error);
                            alert('Error deleting todo. Please try again.');
                        }
                    });
                }
            });
        }

        // AJAX request to add a new to-do
        $('#add-todo-form').submit(function (event) {
            event.preventDefault(); // Prevent the form from submitting the default way

            const task = $('#task_todo').val();
            const date = $('#date_todo').val();

            $.ajax({
                url: '/prof_dashboard/add_todo',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ task: task }),
                success: function (response) {
                    alert(response.message); // Show success message
                    $('#task_todo').val(''); // Clear form fields
                    $('#date_todo').val('');

                    // Fetch and update the to-do list
                    fetchTodos();
                },
                error: function (error) {
                    console.error("Error adding todo:", error);
                    alert('Error adding todo. Please try again.');
                }
            });
        });
    });

    ////////////////////////////// Deadline FUNCTIONS ///////////////////////////////////

    // Fetch and display deadlines when the page loads
    $(document).ready(function () {
        fetchDeadlines();

        // AJAX request to fetch the list of deadlines
        function fetchDeadlines() {
            $.ajax({
                url: '/prof_dashboard/deadline', // URL to your backend route
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    const deadlineList = $('#deadline-items');
                    deadlineList.empty(); // Clear the list before appending new items

                    if (data.length > 0) {
                        data.forEach(function (deadline) {
                            deadlineList.append(`
                                <li id="deadline-${deadline.id}">
                                    <div>
                                        <span><strong>Task:</strong> ${deadline.task}</span><br>
                                        <span><strong>Due Date:</strong> ${new Date(deadline.date).toLocaleDateString()}</span>
                                    </div>
                                    <button class="delete-btn btn btn-sm btn-danger" data-id="${deadline.id}">Delete</button>
                                </li>
                            `);
                        });

                        // Attach delete event handler after deadlines are rendered
                        attachDeleteHandlers();
                    } else {
                        $('#deadline-list').html('<p>No deadlines found.</p>');
                    }
                },
                error: function (error) {
                    console.error("Error fetching deadlines:", error);
                }
            });
        }

        // Function to attach delete event handlers to delete buttons
        function attachDeleteHandlers() {
            $('.delete-btn').on('click', function () {
                const deadlineId = $(this).data('id');

                if (confirm('Are you sure you want to delete this deadline?')) {
                    $.ajax({
                        url: '/prof_dashboard/delete_deadline',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ deadline_id: deadlineId }),
                        success: function (response) {
                            alert(response.message); // Show success message

                            // Remove the deleted deadline from the UI
                            $(`#deadline-${deadlineId}`).remove();
                        },
                        error: function (error) {
                            console.error("Error deleting deadline:", error);
                            alert('Error deleting deadline. Please try again.');
                        }
                    });
                }
            });
        }

        // AJAX request to add a new deadline
        $('#add-deadline-form').submit(function (event) {
            event.preventDefault(); // Prevent the form from submitting the default way

            const task = $('#task').val();
            const date = $('#date').val();

            $.ajax({
                url: '/prof_dashboard/add_deadline',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ task: task, date: date }),
                success: function (response) {
                    alert(response.message); // Show success message
                    $('#task').val(''); // Clear form fields
                    $('#date').val('');

                    // Fetch and update the deadlines list
                    fetchDeadlines();
                },
                error: function (error) {
                    console.error("Error adding deadline:", error);
                    alert('Error adding deadline. Please try again.');
                }
            });
        });
    });
</script>