<!--Prof to do section-->
<div class="col-md-3 col-sm-3 col-3"
     style="background-color: #e9ecef; height: 100vh; right: 0; position: fixed; z-index: 10; padding: 20px;">
    <div id="static-info">
        <!-- Title Section -->
        <div class="jumbotron text-center" style="margin-bottom: 20px;">
            <h1 style="font-size: 5rem; font-weight: bold;">Rema.</h1>
        </div>

        <!-- Upcoming Deadlines Card -->
        <div class="card" style="margin-bottom: 20px;">
            <div class="card-body">
                <h2 class="card-title" style="font-size: 1.5rem; font-weight: bold;">Upcoming Deadlines</h2>
                <ul class="list-unstyled" id="deadlines-list" style="padding-left: 20px;">
                    <li>Project Report: September 20, 2024<span class="remove-btn"
                                                                onclick="removeItem(this)" style="margin-left: 10px; cursor: pointer;">x</span>
                    </li>
                    <li>Assignment 3 Submission: September 25, 2024<span class="remove-btn"
                                                                         onclick="removeItem(this)" style="margin-left: 10px; cursor: pointer;">x</span>
                    </li>
                    <li>Midterm Exam: October 5, 2024<span class="remove-btn" onclick="removeItem(this)"
                                                           style="margin-left: 10px; cursor: pointer;">x</span></li>
                    <li>Research Proposal: October 10, 2024<span class="remove-btn"
                                                                 onclick="removeItem(this)" style="margin-left: 10px; cursor: pointer;">x</span>
                    </li>
                </ul>
                <!-- Edit Button to Add Deadline -->
                <button class="btn btn-primary btn-sm" style="background-color: #808080;"
                        onclick="addDeadline()">Edit</button>
            </div>
        </div>

        <!-- To-Do List Card -->
        <div class="card">
            <div class="card-body">
                <h2 class="card-title" style="font-size: 1.5rem; font-weight: bold;">To-Do List</h2>
                <ul class="list-unstyled" id="todoList" style="padding-left: 20px;"></ul>
                <!-- Template for each to-do item (invisible initially) -->
                <template id="todoItemTemplate">
                    <li data-id="">
                        <span class="task-text"></span> -
                        <span class="task-date" style="color: grey; font-size: 0.9rem;"></span>
                        <button class="delete-todo">Delete</button>
                    </li>
                </template>

                <!-- Edit Button to Add To-Do -->
                <button class="btn btn-primary btn-sm" style="background-color:#808080" onclick="addTodo()">Edit</button>
            </div>
        </div>

    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    ////////////////////////////// TO-DO FUNCTIONS ///////////////////////////////////

    // function to get the todos
    function fetchTodos() {
        $.ajax({
            url: '/prof_dashboard/todo',
            type: 'GET',
            success: function (data) {
                const todoList = $('#todoList');
                todoList.empty(); // Clear the current list

                if (data.length > 0) {
                    data.forEach(todo => {
                        const template = $('#todoItemTemplate').html();
                        const newTodo = $(template).clone();

                        newTodo.attr('data-id', todo.id);
                        newTodo.find('.task-text').text(todo.task);

                        // Format and display the creation date
                        const formattedDate = new Date(todo.created_at).toLocaleDateString(); // You can customize the format
                        newTodo.find('.task-date').text(formattedDate); // Ensure the template has this class

                        // Set up delete button functionality
                        newTodo.find('.delete-todo').click(() => deleteTodo(todo.id));

                        // Append to the todo list
                        todoList.append(newTodo);
                    });
                } else {
                    todoList.append('<li>No tasks found</li>');
                }
            },
            error: function () {
                alert('Error fetching tasks');
            }
        });
    }

    // Function to add a new To-Do item
    function addTodo() {
        let todo = prompt("Enter the new To-Do item:");
        if (todo) {

            // Make an AJAX request to add the task to the server
            $.ajax({
                url: '/prof_dashboard/add_todo',  // Ensure this URL matches your route
                type: 'POST',
                data: { task: todo },
                success: function () {
                    fetchTodos();

                },
                error: function () {
                    alert('Error adding task');
                }
            });
        }
    }

    // Function to delete a to-do task
    function deleteTodo(todoId) {
        $.ajax({
            url: '/prof_dashboard/delete_todo',
            type: 'POST',
            data: { todo_id: todoId },
            success: function () {
                fetchTodos();
            },
            error: function () {
                alert('Error deleting task');
            }
        });
    }

    // Fetch and display the tasks when the page loads
    $(document).ready(function () {
        fetchTodos();
    });
    /////////////////////////////////////////////////////////////////////////////////
</script>