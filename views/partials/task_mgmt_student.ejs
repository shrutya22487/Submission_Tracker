<!-- Student To-Do Section -->
<div class="col-md-3 col-sm-3 col-3"
     style="background-color: #e9ecef; height: 100vh; right: 0; position: fixed; z-index: 10; padding: 20px;">
    <div id="static-info">

        <!-- Title Section -->
        <div class="jumbotron text-center bg-light" style="margin-bottom: 20px; padding: 1.5rem;">
            <h1 style="font-size: 3rem; font-weight: bold;">Rema</h1>
        </div>

        <!-- Upcoming Deadlines Card -->
<div class="card mb-3">
    <div class="card-header text-white bg-primary">
        <h3>Upcoming Deadlines</h3>
    </div>
    <div class="card-body">
        <div id="deadline-list">
            <ul id="deadline-items" class="list-group list-group-flush">
                <!-- Deadlines will be appended here -->
            </ul>
        </div>

        <!-- Form to add a new deadline -->
        <div class="mt-3" style="display: flex; flex-direction: column; align-items: center;">
            <!-- Center-align the toggle button text -->
            <h4 id="toggle-deadline-form" style="cursor: pointer; font-size: 1rem; text-align: center; justify-content: center; margin-bottom: 10px;">
                Add New Deadline
            </h4>
            
            <!-- The form remains hidden by default -->
            <form id="add-deadline-form" style="display: none; width: 100%; max-width: 300px;">
                <div class="mb-2">
                    <label for="task" class="form-label">Task:</label>
                    <input type="text" id="task" name="task" class="form-control" required>
                </div>
                <div class="mb-2">
                    <label for="date" class="form-label">Date:</label>
                    <input type="date" id="date" name="date" class="form-control" required>
                </div>
                <button type="submit" class="btn btn-primary btn-block">Add Deadline</button>
            </form>
        </div>
        
    </div>
</div>

<!-- To-Do List Card -->
<div class="card">
    <div class="card-header text-white bg-success">
        <h3>To-Do List</h3>
    </div>
    <div class="card-body">
        <div id="todo-list">
            <ul id="todo-items" class="list-group list-group-flush">
                <!-- Todos will be appended here -->
            </ul>
        </div>

        <!-- Form to add a new to-do -->
        <div class="mt-3" style="display: flex; flex-direction: column; align-items: center;">
            <!-- Center-align the toggle button text -->
            <h4 id="toggle-todo-form" style="cursor: pointer; font-size: 1rem; text-align: center; justify-content: center; margin-bottom: 10px;">
                Add New Todo
            </h4>
            
            <!-- The form remains hidden by default -->
            <form id="add-todo-form" style="display: none; width: 100%; max-width: 300px;">
                <div class="mb-2">
                    <label for="task_todo" class="form-label">Task:</label>
                    <input type="text" id="task_todo" name="task" class="form-control" required>
                </div>
                <div class="mb-2">
                    <label for="date_todo" class="form-label">Date:</label>
                    <input type="date" id="date_todo" name="date" class="form-control">
                </div>
                <button type="submit" class="btn btn-success btn-block">Add Todo</button>
            </form>
        </div>
        
    </div>
</div>

    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function() {
        // Toggle Deadline form visibility
        $('#toggle-deadline-form').on('click', function() {
            $('#add-deadline-form').toggle();
        });

        // Toggle Todo form visibility
        $('#toggle-todo-form').on('click', function() {
            $('#add-todo-form').toggle();
        });

        // Fetch and display todos
        function fetchTodos() {
            $.ajax({
                url: '/student_dashboard/todo',
                type: 'GET',
                dataType: 'json',
                success: function(data) {
                    const todoList = $('#todo-items');
                    todoList.empty();

                    if (data.length > 0) {
                        data.forEach(function(todo) {
                            todoList.append(`
                                <li class="list-group-item d-flex justify-content-between align-items-center" id="todo-${todo.id}">
                                    ${todo.task}
                                    <button class="btn btn-sm btn-outline-danger delete-btn1" data-id="${todo.id}">Delete</button>
                                </li>
                            `);
                        });
                        attachDeleteHandlers1();
                    } else {
                        $('#todo-list').html('<p>No todos found.</p>');
                    }
                },
                error: function(error) {
                    console.error("Error fetching todos:", error);
                    $('#todo-list').html('<p>Error fetching todos. Please try again later.</p>');
                }
            });
        }

        // Attach delete handlers for todos
        function attachDeleteHandlers1() {
            $('.delete-btn1').on('click', function() {
                const todoId = $(this).data('id');
                if (confirm('Are you sure you want to delete this todo?')) {
                    $.ajax({
                        url: '/student_dashboard/delete_todo',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ todo_id: todoId }),
                        success: function(response) {
                            alert(response.message);
                            $(`#todo-${todoId}`).remove();
                        },
                        error: function(error) {
                            console.error("Error deleting todo:", error);
                            alert('Error deleting todo. Please try again.');
                        }
                    });
                }
            });
        }

        // Add new to-do
        $('#add-todo-form').submit(function(event) {
            event.preventDefault();
            const task = $('#task_todo').val();
            const date = $('#date_todo').val();

            $.ajax({
                url: '/student_dashboard/add_todo',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ task: task, date: date }),
                success: function(response) {
                    alert(response.message);
                    $('#task_todo').val('');
                    $('#date_todo').val('');
                    fetchTodos();
                },
                error: function(error) {
                    console.error("Error adding todo:", error);
                    alert('Error adding todo. Please try again.');
                }
            });
        });

        // Fetch and display deadlines
        function fetchDeadlines() {
            $.ajax({
                url: '/student_dashboard/deadline',
                type: 'GET',
                dataType: 'json',
                success: function(data) {
                    const deadlineList = $('#deadline-items');
                    deadlineList.empty();

                    if (data.length > 0) {
                        data.forEach(function(deadline) {
                            deadlineList.append(`
                                <li class="list-group-item d-flex justify-content-between align-items-center" id="deadline-${deadline.id}">
                                    ${deadline.task} - ${new Date(deadline.date).toLocaleDateString()}
                                    <button class="btn btn-sm btn-outline-danger delete-btn" data-id="${deadline.id}">Delete</button>
                                </li>
                            `);
                        });
                        attachDeleteHandlers();
                    } else {
                        $('#deadline-list').html('<p>No deadlines found.</p>');
                    }
                },
                error: function(error) {
                    console.error("Error fetching deadlines:", error);
                    $('#deadline-list').html('<p>Error fetching deadlines. Please try again later.</p>');
                }
            });
        }

        // Attach delete handlers for deadlines
        function attachDeleteHandlers() {
            $('.delete-btn').on('click', function() {
                const deadlineId = $(this).data('id');
                if (confirm('Are you sure you want to delete this deadline?')) {
                    $.ajax({
                        url: '/student_dashboard/delete_deadline',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ deadline_id: deadlineId }),
                        success: function(response) {
                            alert(response.message);
                            $(`#deadline-${deadlineId}`).remove();
                        },
                        error: function(error) {
                            console.error("Error deleting deadline:", error);
                            alert('Error deleting deadline. Please try again.');
                        }
                    });
                }
            });
        }

        // Add new deadline
        $('#add-deadline-form').submit(function(event) {
            event.preventDefault();
            const task = $('#task').val();
            const date = $('#date').val();

            $.ajax({
                url: '/student_dashboard/add_deadline',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ task: task, date: date }),
                success: function(response) {
                    alert(response.message);
                    $('#task').val('');
                    $('#date').val('');
                    fetchDeadlines();
                },
                error: function(error) {
                    console.error("Error adding deadline:", error);
                    alert('Error adding deadline. Please try again.');
                }
            });
        });

        // Initial fetch of todos and deadlines
        fetchTodos();
        fetchDeadlines();
    });
</script>